name: Chart
on:
  push:
    tags:
      - '*'
    paths:
      - 'deploy/charts/**'
  pull_request:
    branches: master
    paths:
      - 'deploy/charts/**'
      - '!deploy/charts/secret-manager/README.md.gotmpl'
  workflow_dispatch:
jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout secret-manger
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set Commit Message
        id: commitmsg
        run: |
          echo ::set-output name=commitmsg::$(git log --format=%B -n 1 ${{ github.event.after }})
      - name: Fix appversion for tests
        run: |
          LASTTAG=$(git describe --abbrev=0 --tags)
          sed -i "s/%%APP_VERSION%%/${LASTTAG#v}/" deploy/charts/secret-manager/Chart.yaml
      - name: lint
        id: lint
        uses: helm/chart-testing-action@v1.0.0
        if: "! contains(steps.commitmsg.outputs.commitmsg, '[skip chart-lint]')"
        with:
          command: lint
          config: deploy/charts/ct.yaml
      - name: Create kind cluster
        uses: helm/kind-action@v1.0.0
        if: "steps.lint.outputs.changed == 'true' && ! contains(steps.commitmsg.outputs.commitmsg, '[skip chart-install]')"
      - name: test
        uses: helm/chart-testing-action@v1.0.0
        if: "steps.lint.outputs.changed == 'true' && ! contains(steps.commitmsg.outputs.commitmsg, '[skip chart-install]')"
        with:
          command: install
          config: .ct.yaml
  release:
    runs-on: ubuntu-latest
    needs: lint-and-test
    if: "github.event_name != 'pull_request'"
    steps:
      - name: Configure Git
        run: |
          git config --global user.name "${{ secrets.GHCR_USERNAME }}"
          git config --global user.email "${{ secrets.GHCR_USERNAME }}@users.noreply.github.com"
      - name: Checkout secret-manger
        uses: actions/checkout@v2
        with:
          path: secret-manager
          fetch-depth: 0
      - name: Checkout Chart Repo
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GHCR_PASSWORD }}
          repository: "itscontained/charts"
          ref: gh-pages
          path: charts
      - name: Install Helm
        run: |
          curl -fsSLo get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
          chmod 700 get_helm.sh
          ./get_helm.sh
      - name: Install chart-releaser
        run: |
          wget https://github.com/helm/chart-releaser/releases/download/v1.0.0/chart-releaser_1.0.0_linux_amd64.tar.gz
          tar xzvf chart-releaser_1.0.0_linux_amd64.tar.gz cr
      - name: Copy CRDs to Chart and Set Last Tag
        run: |
          cd secret-manager
          make crds-to-chart
          LASTTAG=$(git describe --abbrev=0 --tags)
          echo "Using ${LASTTAG#v} for appVersion"
          sed -i "s/%%APP_VERSION%%/${LASTTAG#v}/" deploy/charts/secret-manager/Chart.yaml
      - name: Generate Helm README
        run: cd secret-manager && make helm-docs
      - name: Release Chart
        run: |
          helm package secret-manager/deploy/charts/secret-manager/ --destination .cr-release-packages
          ./cr upload -t ${{ secrets.GHCR_PASSWORD }} && ./cr index
          cd charts/ && git add . && git commit -m "release chart" && git push
        env:
          CR_CHARTS_REPO: "https://charts.itscontained.io"
          CR_INDEX_PATH: "charts/index.yaml"
          CR_OWNER: "itscontained"
          CR_GIT_REPO: "charts"
